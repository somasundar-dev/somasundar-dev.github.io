name: Deploy to AWS with Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      run:
        default: 'Deploy'
        description: "Run Deployment or Destroy"
        required: true
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
    Generate-Build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout caller repo
          uses: actions/checkout@v4

        - name: Replace placeholders
          uses: Somasundar-Projects/replace-vars-action@v1.1.0
          with:
            input-file: "./Infra/variables.tfvars"
            output-file: "./Infra/variables.tfvars"
          env:
            aws_region: ${{ vars.AWS_REGION }}
            environment: "prod"
            bucket_name: ${{ vars.TERRAFORM_STATE_BUCKET }}
            app_name: "portfolio"
            current_version: 1.0.${{ github.run_number }}
            domain_name: ${{ secrets.WEBSITE_DOMAIN_NAME }}

        - name: Create Terraform file
          run: |
            rm -rf Infra/Docs
            mkdir -p Infra/Docs
            mv Docs/* Infra/Docs/
            tar -czf Deployment-Terraform.tar.gz -C Infra .

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: Deployment-Terraform
            if-no-files-found: error
            retention-days: 7
            path: Deployment-Terraform.tar.gz


    deployment:
      needs: Generate-Build
      name: Terraform Deploy
      uses: Somasundar-Projects/Deployments/.github/workflows/terraform.yml@main
      with:
        app_name: "portfolio"
        aws_region: ${{ vars.AWS_REGION }}
        command: ${{ github.event.inputs.run || 'apply' }}
        tfvars_file_path: "variables.tfvars"
        bucket_name: ${{ vars.TERRAFORM_STATE_BUCKET }}
        with_backend: true
        environment: "prod"
      secrets:
        aws_identity_provider_role: ${{ secrets.AWS_OCID_ROLE }}